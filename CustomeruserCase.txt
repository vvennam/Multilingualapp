import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

class Customer {

private int customerID;
private String name;
private ArrayList<Account> accounts;

public Customer (int customerID, String name, ArrayList<Account> accounts) {
 this.customerID = customerID;
 this.name = name;
 this.accounts = accounts;
}

public int getCustomerID () {
 return customerID;
}

public void setCustomerID (int customerID) {
 this.customerID = customerID;
}

public String getName () {
 return name;
}

public void setName (String name) {
 this.name = name;
}

public ArrayList<Account> getAccounts () {
 return accounts;
}

public void setAccounts (ArrayList<Account> accounts) {
 this.accounts = accounts;
}


public void printCustomerDetails () {
 System.out.println ("Customer ID: " + customerID);
 System.out.println ("Name: " + name);
 System.out.println ("Accounts: ");

 for (Account account : accounts) {
   account.printAccountDetails ();
 }
 System.out.println ();
}
}


class Account {

private int accountNumber;
private String type;
private double balance;


public Account (int accountNumber, String type, double balance) {
 this.accountNumber = accountNumber;
 this.type = type;
 this.balance = balance;
}


public int getAccountNumber () {
 return accountNumber;
}

public void setAccountNumber (int accountNumber) {
 this.accountNumber = accountNumber;
}

public String getType () {
 return type;
}

public void setType (String type) {
 this.type = type;
}

public double getBalance () {
 return balance;
}

public void setBalance (double balance) {
 this.balance = balance;
}


public void printAccountDetails () {
 System.out.println ("Account Number: " + accountNumber);
 System.out.println ("Type: " + type);
 System.out.println ("Balance: " + balance);
 System.out.println ();
}
}


public class Main {

public static void main (String [] args) {


 ArrayList<Customer> customers = new ArrayList<Customer> ();

 // Create some Account objects for each customer
 Account account1 = new Account (1001, "Savings", 5000.0);
 Account account2 = new Account (1002, "Credit", 3000.0);
 Account account3 = new Account (1003, "Savings", 2000.0);
 Account account4 = new Account (1004, "Credit", 4000.0);
 Account account5 = new Account (1005, "Savings", 1000.0);


 ArrayList<Account> accounts1 = new ArrayList<Account> ();
 accounts1.add (account1);
 accounts1.add (account2);

 ArrayList<Account> accounts2 = new ArrayList<Account> ();
 accounts2.add (account3);

 ArrayList<Account> accounts3 = new ArrayList<Account> ();
 accounts3.add (account4);
 accounts3.add (account5);


 Customer customer1 = new Customer (1, "Venkat", accounts1);
 Customer customer2 = new Customer (2, "Ravi", accounts2);
 Customer customer3 = new Customer (3, "Ramesh", accounts3);

 customers.add (customer1);
 customers.add (customer2);
 customers.add (customer3);


 ArrayList<Customer> custwithmulaccounts = new ArrayList<Customer> ();
 ArrayList<Customer> custwithoneaccount = new ArrayList<Customer> ();
 
 List<Customer> customersWithMultipleAccounts = customers.stream()
	        .filter(customer -> customer.getAccounts().size() > 1)
	        .collect(Collectors.toList());
 
 List<Customer> customersWithOneAccount = customers.stream()
	        .filter(customer -> customer.getAccounts().size() == 1)
	        .collect(Collectors.toList());

  for (Customer customer : customers) {

   if (customer.getAccounts ().size () > 1) {

	   custwithmulaccounts.add (customer);
   }
   else
   {
	   custwithoneaccount.add (customer);
   }
 }


 System.out.println ("Customers who have multiple accounts: using stream api ");
 for (Customer customer : customersWithMultipleAccounts) {
   customer.printCustomerDetails ();
 }
 
 System.out.println ("Customers who have single accounts: using stream api ");
 for (Customer customer : customersWithOneAccount) {
   customer.printCustomerDetails ();
 }
 
 System.out.println ("Customers who have multiple accounts: using Arrarlist ");
 for (Customer customer : custwithmulaccounts) {
   customer.printCustomerDetails ();
 }
 
 System.out.println ("Customers who have single accounts: using Arrarlist ");
 for (Customer customer : custwithoneaccount) {
   customer.printCustomerDetails ();
 }
}
}
